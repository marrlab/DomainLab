# test benchmark config.

tpath: examples/tasks/task_blood2_small.py  # dataset

test_domains:
  - acevedo
  - matek
  - mll

output_dir: zoutput/benchmarks/test_bloodcell_benchmark
dmem: True

# number of hyperparameter samples per task.
# Thus, the total runs of each task are given
# by len(domains) * num_param_samples * num_seeds (see below)
num_param_samples: # TODO set num of param samples

epos: 100
bs: 64
startseed: 1000
endseed: 1000  # currently included

# set all parameters to default first
nname: conv_bn_pool_2
#lr: 1e-4
#gamma_reg: 0.1
#es: 10
#gen: False
#split: 0
#san_check: False
#zd_dim: 64
#zx_dim: 0
#zy_dim: 64

Task1:  # name
  aname: diva
  # set nname_dom = nname when changing nname
  nname_dom: conv_bn_pool_2

  hyperparameters:
    gamma_y:
      min: 1e4
      max: 2e5
      step: 100
      distribution: loguniform

    gamma_d:
      min: 1e4
      max: 1e6
      step: 10_000
      distribution: loguniform

    zx_dim:
      min: 0
      max: 96
      step: 32
      distribution: uniform

    zy_dim:
      min: 32
      max: 96
      step: 32
      distribution: uniform

    zd_dim:
      reference: zy_dim

    early_stop:
      distribution: categorical
      datatype: int
      values:
        - 1
        - 5
        - 10

    gamma_reg:
      min: 0.01
      max: 10
      distribution: loguniform

Task2:  # name
  aname: hduva

  nname_topic_distrib_img2topic: conv_bn_pool_2
  nname_encoder_sandwich_layer_img2h4zd: conv_bn_pool_2

  hyperparameters:
    # Same config as diva.
    gamma_y:
      min: 1e4
      max: 2e5
      step: 100
      distribution: loguniform

    zx_dim:
      min: 0
      max: 96
      step: 32
      distribution: uniform

    zy_dim:
      min: 32
      max: 96
      step: 32
      distribution: uniform

    zd_dim:
      reference: zy_dim

    early_stop:
      distribution: categorical
      datatype: int
      values:
        - 1
        - 5
        - 10

    gamma_reg:
      min: 0.01
      max: 10
      distribution: loguniform

#Task3:  # name
#  aname: matchdg
#
#  hyperparameters:
#    # penalty weight for matching loss (Lambda in paper)
#    penalty_ws:
#      min: 0.01
#      max: 10
#      distribution: loguniform
#
#    # Total number of epochs for contrastive loss
#    epochs_ctr:
#      min: 1
#      max: 2
#      step: 1
#      distribution: uniform
#
#    # this shall be set to be epos - epochs_ctr
#    # as epos cannot be referenced here one needs to hardcode this right number of epos here
#    epochs_erm:
#      reference: 3 - epochs_ctr
#
#    # factor to magnify cosine similarity
#    tau:
#      min: 0.01
#      max: 1
#      distribution: loguniform
#
#    # Number of epochs before updating the match tensor
#    epos_per_match_update:
#      min: 1
#      max: 20
#      step: 1
#      distribution: uniform
#
#    early_stop:
#      distribution: categorical
#      datatype: int
#      values:
#        - 1
#        - 5
#        - 10
#
#    gamma_reg:
#      min: 0.01
#      max: 10
#      distribution: loguniform

#Task4:  # name
#  aname: jigen
#
#  hyperparameters:
#    # number of permutations
#    nperm:
#      distribution: categorical
#      values:
#        - 30
#        - 31
#        - 100
#      datatype: int
#
#    # probability of permutating the tiles of an image, pperm = 0 -> pure classification
#    pperm:
#      min: 0.1
#      max: 0.5
#      distribution: uniform
#
#    # length of image in tile unit
#    grid_len:
#      min: 2
#      max: 5
#      step: 1
#      distribution: uniform
#
#    early_stop:
#      distribution: categorical
#      datatype: int
#      values:
#        - 1
#        - 5
#        - 10
#
#    gamma_reg:
#      min: 0.01
#      max: 10
#      distribution: loguniform
#
##    constraints:
##      # constraint as nperm should be less or equal to the maximal possible number of permutations
##      - "nperm <= 1_000 * (grid_len ** 2)"

Task5:  # name
  aname: dann

  hyperparameters:
    early_stop:
      distribution: categorical
      datatype: int
      values:
        - 1
        - 5
        - 10

    gamma_reg:
      min: 0.01
      max: 10
      distribution: loguniform
  
Task6:  # name
  aname: deepall

  hyperparameters:
    early_stop:
      distribution: categorical
      datatype: int
      values:
        - 1
        - 5
        - 10

    gamma_reg:
      min: 0.01
      max: 10
      distribution: loguniform

Task7: # name
  aname: deepall_dial

  hyperparameters:
    dial_steps_perturb:
      min: 1
      max: 10
      step: 1
      distribution: uniform

    dial_noise_scale:
      min: 0.00001
      max: 0.1
      distribution: loguniform

    dial_epsilon:
      min: 0.001
      max: 0.01
      distribution: loguniform

    early_stop:
      distribution: categorical
      datatype: int
      values:
        - 1
        - 5
        - 10

    gamma_reg:
      min: 0.01
      max: 10
      distribution: loguniform
